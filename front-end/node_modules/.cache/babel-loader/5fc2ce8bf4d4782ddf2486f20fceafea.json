{"ast":null,"code":"var _jsxFileName = \"/Users/RaymondChu/spotify-playlist-generator/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\nconst spotifyWebApi = new Spotify();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const params = this.getHashParams();\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.getNowPlaying = this.getNowPlaying.bind(this);\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      artists: '',\n      nowPlaying: {\n        name: 'Not checked',\n        image: ''\n      }\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      console.log(response);\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          image: response.item.album.images[0].url\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        nowPlaying: {\n          name: 'Currently not playing anything'\n        }\n      });\n    });\n  }\n\n  componentDidMount() {\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      console.log(response);\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          image: response.item.album.images[0].url\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        nowPlaying: {\n          name: 'Currently not playing anything'\n        }\n      });\n    });\n  }\n\n  handleSearchChange(event) {\n    this.setState({\n      artists: event.target.value\n    });\n  }\n\n  handleSearch() {\n    spotifyWebApi.searchArtists(this.state.artists).then(res => {\n      console.log(res);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"Spotify Playlist Generator\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"Log into Spotify\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, \"Now playing: \", this.state.nowPlaying.name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.nowPlaying.image,\n      style: {\n        width: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getNowPlaying,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"Get now playing\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.searchArtist,\n      onChange: this.handleSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"Search\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/RaymondChu/spotify-playlist-generator/src/App.js"],"names":["React","Spotify","spotifyWebApi","App","Component","constructor","props","params","getHashParams","handleSearchChange","bind","getNowPlaying","state","loggedIn","access_token","artists","nowPlaying","name","image","setAccessToken","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getMyCurrentPlaybackState","then","response","console","log","setState","item","album","images","url","catch","err","componentDidMount","event","target","value","handleSearch","searchArtists","res","render","width","searchArtist"],"mappings":"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","sourcesContent":["import React from 'react'; \nimport logo from './logo.svg';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\n\nconst spotifyWebApi = new Spotify();\n\nclass App extends React.Component { \n  constructor(props) {\n    super(props);\n    const params = this.getHashParams();\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.getNowPlaying = this.getNowPlaying.bind(this);\n\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      artists: '',\n      nowPlaying: {\n        name: 'Not checked',\n        image: '',\n      },\n    }\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token)\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState()\n    .then((response) => {\n      console.log(response)\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          image: response.item.album.images[0].url\n        }\n      })\n    })\n    .catch((err) => {\n      console.log(err)\n      this.setState({\n        nowPlaying: {\n          name: 'Currently not playing anything'\n        }\n      })\n    })\n  }\n\n  componentDidMount() {\n    spotifyWebApi.getMyCurrentPlaybackState()\n    .then((response) => {\n      console.log(response)\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          image: response.item.album.images[0].url\n        }\n      })\n    })\n\n    .catch((err) => {\n      console.log(err)\n      this.setState({\n        nowPlaying: {\n          name: 'Currently not playing anything'\n        }\n      })\n    })\n  }\n\n  handleSearchChange(event) {\n    this.setState({\n      artists: event.target.value\n    })\n  }\n\n  handleSearch() {\n    spotifyWebApi.searchArtists(this.state.artists)\n    .then((res) => {\n      console.log(res)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Spotify Playlist Generator</h1>\n        <a href=\"http://localhost:8888\">\n          <button>\n            Log into Spotify\n          </button>\n        </a>\n        <div>\n          Now playing: {this.state.nowPlaying.name}\n        </div>\n        <div>\n          <img src={this.state.nowPlaying.image} style={{width: 100}} />\n        </div>\n        <button onClick={this.getNowPlaying}>\n          Get now playing\n        </button>\n        <br/>\n        <form>\n          <input type=\"text\" value={this.state.searchArtist} onChange={this.handleSearchChange}/>\n          <button onClick={this.handleSearch}>\n            Search\n          </button>\n        </form>\n      </div> \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}