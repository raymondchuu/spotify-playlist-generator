{"ast":null,"code":"var _jsxFileName = \"/Users/RaymondChu/spotify-playlist-generator/front-end/src/components/Main.js\";\nimport React from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Alert from 'react-bootstrap/Alert';\nimport '../Main.css';\nconst spotifyWebApi = new Spotify();\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    const params = this.getHashParams();\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handlePlaylistName = this.handlePlaylistName.bind(this);\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      artists: '',\n      tracks: [],\n      trackuri: [],\n      playlistName: '',\n      device_id: '',\n      user_id: '',\n      success: true,\n      show: true\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  componentDidMount() {\n    spotifyWebApi.getMe().then(res => {\n      this.setState({\n        user_id: res.id\n      });\n    });\n  }\n\n  handleSearchChange(event) {\n    this.setState({\n      artists: event.target.value\n    });\n  }\n\n  handleSearchArtistId() {\n    this.setState({\n      tracks: []\n    });\n    let artists = this.state.artists.split(',');\n    artists.map(artistName => spotifyWebApi.searchArtists(artistName).then(res => {\n      let artistId = res.artists.items[0].id;\n      spotifyWebApi.getArtistTopTracks(artistId, \"CA\").then(res => {\n        console.log(res);\n\n        for (let i = 0; i < res.tracks.length; i++) {\n          this.setState(state => {\n            const tracks = state.tracks.concat(res.tracks[i]);\n            const trackuri = state.trackuri.concat(res.tracks[i].uri);\n            return {\n              tracks,\n              trackuri\n            };\n          });\n        }\n      });\n    }));\n  }\n\n  handlePlaylistName(event) {\n    this.setState({\n      playlistName: event.target.value\n    });\n  }\n\n  handleCreatePlaylist() {\n    spotifyWebApi.createPlaylist(this.state.user_id, {\n      name: this.state.playlistName\n    }).then(res => {\n      spotifyWebApi.addTracksToPlaylist(this.state.user_id, res.id, this.state.trackuri);\n      this.setState({\n        success: true\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        success: false\n      });\n    });\n  }\n\n  createPlaylist() {\n    //this.handleCreatePlaylist();\n    this.setState({\n      show: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#212121',\n        height: '100%',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, this.state.loggedIn ? \"\" : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      className: \"loginbutton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, \"CLICK TO LOG IN\")), this.state.loggedIn ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"introbackground\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: '30px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, \"This Spotify playlist generator is used to generate a playlist of the top songs from your favourite artists.\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: '30px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, \"To get started, type the names of your favourite artists into the search bar, separated by commas!\"))), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"artistInput\",\n      style: {\n        width: '30%',\n        textDecoration: 'none',\n        borderRadius: '30px',\n        boxSizing: 'border-box'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      className: \"bi bi-search\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 16 16\",\n      fill: \"currentColor\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(FormControl, {\n      style: {\n        outline: 'none',\n        boxShadow: 'none ',\n        border: '1px solid #ccc '\n      },\n      type: \"search\",\n      className: \"artistInput\",\n      placeholder: \"Search\\u2026\",\n      value: this.state.artists,\n      onChange: this.handleSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"searchbutton\",\n      type: \"button\",\n      style: {\n        marginTop: '1%',\n        marginBottom: '3%'\n      },\n      onClick: () => this.handleSearchArtistId(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, \"SEARCH TOP TRACKS\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"trackslist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }, this.state.tracks.map(track => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      style: {\n        marginBottom: '3%'\n      },\n      key: track.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: track.album.images[0].url,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 85\n      }\n    }), \"\\u2003\", track.name))))), this.state.tracks.length > 0 ? /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      style: {\n        textAlign: 'center',\n        alignContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      style: {\n        textAlign: 'center',\n        margin: 'auto',\n        width: '30%',\n        marginBottom: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      className: \"bi bi-collection-play\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 16 16\",\n      fill: \"currentColor\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M14.5 13.5h-13A.5.5 0 0 1 1 13V6a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-.5.5zm-13 1A1.5 1.5 0 0 1 0 13V6a1.5 1.5 0 0 1 1.5-1.5h13A1.5 1.5 0 0 1 16 6v7a1.5 1.5 0 0 1-1.5 1.5h-13zM2 3a.5.5 0 0 0 .5.5h11a.5.5 0 0 0 0-1h-11A.5.5 0 0 0 2 3zm2-2a.5.5 0 0 0 .5.5h7a.5.5 0 0 0 0-1h-7A.5.5 0 0 0 4 1z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M6.258 6.563a.5.5 0 0 1 .507.013l4 2.5a.5.5 0 0 1 0 .848l-4 2.5A.5.5 0 0 1 6 12V7a.5.5 0 0 1 .258-.437z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(FormControl, {\n      style: {\n        outline: 'none',\n        boxShadow: 'none ',\n        border: '1px solid #ccc'\n      },\n      type: \"text\",\n      placeholder: \"Playlist Name\",\n      value: this.state.playlistName,\n      onChange: this.handlePlaylistName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 33\n      }\n    })), this.state.show ? /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        display: 'block',\n        margin: 'auto',\n        width: '25%',\n        height: '50px'\n      },\n      variant: this.state.success ? \"success\" : \"danger\",\n      dismissible: true,\n      onClose: () => this.setState({\n        show: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Alert.Heading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }\n    }, this.state.success ? \"Playlist Created!\" : \"Error! Please try again.\")) : \"\", /*#__PURE__*/React.createElement(\"button\", {\n      className: \"searchbutton\",\n      style: {\n        marginTop: '1%',\n        marginBottom: '2%'\n      },\n      type: \"button\",\n      onClick: () => this.createPlaylist(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }, \"CREATE PLAYLIST\")) : \"\")) : \"\");\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/RaymondChu/spotify-playlist-generator/front-end/src/components/Main.js"],"names":["React","Spotify","InputGroup","FormControl","Alert","spotifyWebApi","Main","Component","constructor","props","params","getHashParams","handleSearchChange","bind","handlePlaylistName","state","loggedIn","access_token","artists","tracks","trackuri","playlistName","device_id","user_id","success","show","setAccessToken","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","componentDidMount","getMe","then","res","setState","id","event","target","value","handleSearchArtistId","split","map","artistName","searchArtists","artistId","items","getArtistTopTracks","console","log","i","length","concat","uri","handleCreatePlaylist","createPlaylist","name","addTracksToPlaylist","catch","err","render","backgroundColor","height","width","paddingTop","fontSize","textDecoration","borderRadius","boxSizing","outline","boxShadow","border","marginTop","marginBottom","textAlign","track","album","images","url","alignContent","margin","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Alert from 'react-bootstrap/Alert';\nimport '../Main.css';\n\nconst spotifyWebApi = new Spotify();\n\nclass Main extends React.Component{\n    constructor(props) {\n        super(props);\n        const params = this.getHashParams();\n\n        this.handleSearchChange = this.handleSearchChange.bind(this);\n        this.handlePlaylistName = this.handlePlaylistName.bind(this);\n\n        this.state = {\n            loggedIn: params.access_token ? true : false,\n            artists: '',\n            tracks: [],\n            trackuri: [],\n            playlistName: '',\n            device_id: '',\n            user_id: '',\n            success: true,\n            show: true\n        }\n\n        if (params.access_token) {\n            spotifyWebApi.setAccessToken(params.access_token)\n        }\n    }\n\n    getHashParams() {\n        var hashParams = {};\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\n            q = window.location.hash.substring(1);\n        while ( e = r.exec(q)) {\n            hashParams[e[1]] = decodeURIComponent(e[2]);\n        }\n        return hashParams;\n    }\n\n    componentDidMount() {\n        spotifyWebApi.getMe()\n        .then((res) => {\n            this.setState({\n            user_id: res.id\n            })\n        })\n    }\n\n    handleSearchChange(event) {\n        this.setState({\n            artists: event.target.value\n        })\n    }\n\n    handleSearchArtistId() {\n        this.setState({tracks: []})\n        let artists = this.state.artists.split(',');\n        artists.map(artistName => (\n            spotifyWebApi.searchArtists(artistName) \n            .then((res) => {\n            let artistId = res.artists.items[0].id\n            spotifyWebApi.getArtistTopTracks(artistId, \"CA\")\n            .then((res) => {\n                console.log(res)\n                for (let i = 0; i < res.tracks.length; i++) {\n                this.setState(state => {\n                    const tracks = state.tracks.concat(res.tracks[i])\n                    const trackuri = state.trackuri.concat(res.tracks[i].uri)\n                    return {tracks, trackuri}\n                })\n                }\n            })\n            }) \n        ))\n    }\n    \n    handlePlaylistName(event) {\n        this.setState({\n            playlistName: event.target.value\n        })\n    }\n\n    handleCreatePlaylist() {\n        spotifyWebApi.createPlaylist(this.state.user_id, {name: this.state.playlistName})\n        .then((res) => {\n            spotifyWebApi.addTracksToPlaylist(this.state.user_id, res.id, this.state.trackuri)\n            this.setState({\n                success: true\n            })\n        })\n        .catch((err) => {\n            console.log(err)\n            this.setState({\n                success: false\n            })\n        })\n\n    }\n\n    createPlaylist() {\n        //this.handleCreatePlaylist();\n        this.setState({show: true})\n    }\n\n    render() {\n        return (\n            <div style={{backgroundColor: '#212121', height: '100%', width: '100%'}}>\n                {this.state.loggedIn ? \"\" : \n                <div style={{paddingTop: '5%'}}>\n                    <a href=\"http://localhost:8888\" className=\"loginbutton\">\n                        CLICK TO LOG IN\n                    </a>\n                </div>\n                }\n                {this.state.loggedIn ? \n                <div>\n                    <div className=\"introbackground\">\n                    <div className=\"intro\">\n                        <p style={{fontSize: '30px'}}>This Spotify playlist generator is used to generate a playlist of the top songs from your favourite artists.</p>\n                        <p style={{fontSize: '30px'}}>To get started, type the names of your favourite artists into the search bar, separated by commas!</p>\n                    </div>\n                    </div>\n                    <form className=\"form\">\n{/*                         <input \n                        type=\"search\"\n                        className=\"artistInput\"\n                        placeholder=\"Search&#x2026;\"\n                        value={this.state.artists} \n                        onChange={this.handleSearchChange}\n                        /> */}\n                        <InputGroup className=\"artistInput\" style={{width: '30%', textDecoration: 'none', borderRadius: '30px', boxSizing: 'border-box'}}>\n                            <InputGroup.Prepend>\n                            <InputGroup.Text>\n                                <svg className=\"bi bi-search\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path fillRule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"/>\n                                    <path fillRule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"/>\n                                </svg>\n                            </InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <FormControl style={{outline: 'none', boxShadow: 'none ', border: '1px solid #ccc '}}\n                                type=\"search\"\n                                className=\"artistInput\"\n                                placeholder=\"Search&#x2026;\"\n                                value={this.state.artists} \n                                onChange={this.handleSearchChange}\n                            />\n                        </InputGroup>\n                        <br/>\n                        <button className=\"searchbutton\" type=\"button\" style={{marginTop: '1%', marginBottom: '3%'}} onClick={() => this.handleSearchArtistId()}>\n                            SEARCH TOP TRACKS\n                        </button>\n                    </form>\n\n                    <div style={{textAlign: 'center'}}>\n                        <div className=\"trackslist\">\n                            <ul>\n                                {this.state.tracks.map(track => (\n                                    <div>\n                                    <li style={{marginBottom: '3%'}} key={track.id}><img src={track.album.images[0].url} style={{width: '50px'}}/>&emsp;{track.name}</li>\n                                    </div>\n                                ))}\n                            </ul>\n                        </div>\n                        { this.state.tracks.length > 0 ? \n                        <form className=\"form\" style={{textAlign: 'center', alignContent: 'center'}}>\n                            <InputGroup style={{textAlign: 'center', margin: 'auto', width: '30%', marginBottom: '1%'}}>\n                                <InputGroup.Prepend>\n                                <InputGroup.Text>\n                                    <svg className=\"bi bi-collection-play\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path fillRule=\"evenodd\" d=\"M14.5 13.5h-13A.5.5 0 0 1 1 13V6a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-.5.5zm-13 1A1.5 1.5 0 0 1 0 13V6a1.5 1.5 0 0 1 1.5-1.5h13A1.5 1.5 0 0 1 16 6v7a1.5 1.5 0 0 1-1.5 1.5h-13zM2 3a.5.5 0 0 0 .5.5h11a.5.5 0 0 0 0-1h-11A.5.5 0 0 0 2 3zm2-2a.5.5 0 0 0 .5.5h7a.5.5 0 0 0 0-1h-7A.5.5 0 0 0 4 1z\"/>\n                                        <path fillRule=\"evenodd\" d=\"M6.258 6.563a.5.5 0 0 1 .507.013l4 2.5a.5.5 0 0 1 0 .848l-4 2.5A.5.5 0 0 1 6 12V7a.5.5 0 0 1 .258-.437z\"/>\n                                    </svg>\n                                </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl style={{outline: 'none', boxShadow: 'none ', border: '1px solid #ccc'}}\n                                    type=\"text\"\n                                    placeholder=\"Playlist Name\"\n                                    value={this.state.playlistName}\n                                    onChange={this.handlePlaylistName}\n                                />\n                            </InputGroup>\n\n                            {this.state.show ? \n                                <Alert style={{display: 'block', margin: 'auto', width: '25%', height: '50px'}} variant={this.state.success ? \"success\" : \"danger\"} dismissible onClose={() => this.setState({show: false}) }>\n                                <Alert.Heading>\n                                    {this.state.success ? \"Playlist Created!\" : \"Error! Please try again.\"}\n                                </Alert.Heading>\n                            </Alert>\n                            : \"\"}\n\n                            <button className=\"searchbutton\" style={{marginTop: '1%', marginBottom: '2%'}} type=\"button\" onClick={() => this.createPlaylist()}>\n                                CREATE PLAYLIST\n                            </button>\n\n\n                        </form>\n                        : \"\"}\n                    </div>\n                </div> \n                : \"\"}\n            </div>\n        )\n    }\n}\n\nexport default Main"]},"metadata":{},"sourceType":"module"}